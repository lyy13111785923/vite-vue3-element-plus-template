{"version":3,"file":"vue-word-highlighter.cjs.js","sources":["../src/utils/getRowWordList.ts","../src/utils/createHighlightWordChunk.ts","../src/utils/extractDefaultSlotsText.ts","../src/utils/extractMatchesStrings.ts","../src/components/index.ts"],"sourcesContent":["export const getRowWordList = (\n  word: string,\n  splittedWordList: string[]\n): string[] => {\n  const rowWordList: string[] = [];\n  splittedWordList.forEach((splittedWord) => {\n    const start = rowWordList.join(\"\").length;\n    const end = start + splittedWord.length;\n    rowWordList.push(word.slice(start, end));\n  });\n\n  return rowWordList;\n};\n","import { h } from \"vue-demi\";\nimport diacritics from \"diacritics\";\nimport { getRowWordList } from \"./getRowWordList\";\n\nconst escapeRegExp = (text: string) => {\n  return text.replace(/[-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n};\n\nconst createHighlightPattern = (options: {\n  query: string | RegExp;\n  splitBySpace: boolean;\n  caseSensitive: boolean;\n}): RegExp => {\n  let pattern: string;\n\n  if (options.query instanceof RegExp) {\n    return new RegExp(\n      String.raw`(${options.query.source})`,\n      `g${options.caseSensitive ? \"\" : \"i\"}`\n    );\n  }\n\n  if (options.splitBySpace) {\n    const normalizeQuery = options.query.trim().replace(/\\s+/g, \" \");\n    pattern = String.raw`(${normalizeQuery\n      .split(/\\s/)\n      .map(escapeRegExp)\n      .join(\"|\")})`;\n  } else {\n    pattern = String.raw`(${escapeRegExp(options.query)})`;\n  }\n\n  return new RegExp(\n    String.raw`${pattern}`,\n    `g${options.caseSensitive ? \"\" : \"i\"}`\n  );\n};\n\nexport const createHighlightWordChunk = (\n  targetText: string,\n  options: {\n    query: string | RegExp;\n    splitBySpace: boolean;\n    caseSensitive: boolean;\n    diacriticsSensitive: boolean;\n    highlightTag: string;\n    highlightClass: Record<string, boolean> | string | string[];\n    highlightStyle: Record<string, boolean> | string | string[];\n  },\n  isHtml = false\n) => {\n  if (\n    !options.query ||\n    (options.query instanceof String && !options.query.trim())\n  ) {\n    return targetText;\n  }\n\n  let innerTargetText = targetText;\n  let innerQuery = options.query;\n  let hasDiacritics = false;\n\n  if (!options.diacriticsSensitive) {\n    innerTargetText = diacritics.remove(innerTargetText);\n    innerQuery =\n      options.query instanceof RegExp\n        ? options.query\n        : diacritics.remove(options.query);\n    hasDiacritics = innerTargetText !== targetText;\n  }\n\n  const pattern = createHighlightPattern({\n    query: innerQuery,\n    splitBySpace: options.splitBySpace,\n    caseSensitive: options.caseSensitive,\n  });\n\n  const wordList = innerTargetText.split(pattern);\n\n  // Make a list restoring the original string because diacritics may have been converted\n  const restoredWordList = hasDiacritics\n    ? getRowWordList(targetText, wordList)\n    : wordList;\n\n  if (isHtml) {\n    return wordList\n      .map((w: string, i: number) => {\n        if (pattern.test(w)) {\n          // FIXME: highlightClass and highlightStyle are only supported as string\n          const classLiteral = options.highlightClass\n            ? ` class=\"${options.highlightClass}\"`\n            : \"\";\n          const styleLiteral = options.highlightStyle\n            ? ` style=\"${options.highlightStyle}\"`\n            : \"\";\n          return `<${options.highlightTag}${classLiteral}${styleLiteral}>${restoredWordList[i]}</${options.highlightTag}>`;\n        }\n        return restoredWordList[i];\n      })\n      .join(\"\");\n  } else {\n    return wordList.map((w: string, i: number) => {\n      if (pattern.test(w)) {\n        return h(\n          options.highlightTag,\n          {\n            class: options.highlightClass,\n            style: options.highlightStyle,\n          },\n          restoredWordList[i]\n        );\n      }\n      return restoredWordList[i];\n    });\n  }\n};\n","import { isVue3 } from \"vue-demi\";\n\ntype SlotItem = { children: string | SlotItem[]; text: string };\ntype Slots = { default?: () => SlotItem[] };\n\nconst getSlotText = (slot: SlotItem): string => {\n  if (!Array.isArray(slot.children)) {\n    return slot.children ?? \"\";\n  }\n  return slot.children.map(getSlotText).join(\"\");\n};\n\nexport const extractDefaultSlotsText = (slots?: Slots): string => {\n  if (slots && slots.default) {\n    const defaultSlot = slots.default();\n    let slotText;\n    if (isVue3) {\n      slotText = getSlotText(defaultSlot[0]);\n    } else {\n      // vue 2 slots text is in vnode's text attribute\n      slotText = defaultSlot[0].text;\n    }\n    if (typeof slotText === \"string\") {\n      return slotText;\n    } else {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\"Slots should be text only\");\n      }\n      return \"\";\n    }\n  }\n  return \"\";\n};\n","import { isVue3 } from \"vue-demi\";\n\nexport const extractMatchesStrings = (\n  wordChunk: string | (string | unknown)[]\n): string[] => {\n  if (typeof wordChunk === \"string\") {\n    return [];\n  }\n  return wordChunk\n    .filter((w) => typeof w !== \"string\")\n    .map((v) => {\n      if (typeof v === \"string\") {\n        return v;\n      }\n      if (isVue3) {\n        return (v as { children: string }).children;\n      }\n      return (v as { children: { text: string }[] }).children[0].text;\n    });\n};\n","import { defineComponent, h, install, PropType, isVue3, VNode } from \"vue-demi\";\nimport { createHighlightWordChunk } from \"../utils/createHighlightWordChunk\";\nimport { extractDefaultSlotsText } from \"../utils/extractDefaultSlotsText\";\nimport { extractMatchesStrings } from \"../utils/extractMatchesStrings\";\n\ninstall();\n\nexport default defineComponent({\n  name: \"VueWordHighlighter\",\n  props: {\n    query: {\n      type: [String, RegExp],\n      required: true,\n      default: \"\",\n    },\n    caseSensitive: {\n      type: Boolean,\n      default: false,\n    },\n    diacriticsSensitive: {\n      type: Boolean,\n      default: false,\n    },\n    splitBySpace: {\n      type: Boolean,\n      default: false,\n    },\n    highlightClass: {\n      type: [Object, String, Array] as PropType<\n        Record<string, boolean> | string | string[]\n      >,\n      default: \"\",\n    },\n    highlightStyle: {\n      type: [Object, String, Array] as PropType<\n        Record<string, boolean> | string | string[]\n      >,\n      default: \"\",\n    },\n    highlightTag: {\n      type: String,\n      default: \"mark\",\n    },\n    wrapperTag: {\n      type: String,\n      default: \"span\",\n    },\n    wrapperClass: {\n      type: [Object, String, Array],\n      default: \"\",\n    },\n    textToHighlight: {\n      type: String,\n      default: \"\",\n    },\n    htmlToHighlight: {\n      type: String,\n      default: \"\",\n    },\n  },\n  emits: [\"matches\"],\n  setup(props, ctx) {\n    return () => {\n      // --------------------------\n      // highlight html\n      // --------------------------\n      // preferred htmlToHighlight if provided\n      if (props.htmlToHighlight) {\n        if (!isVue3) {\n          throw new Error(\"htmlToHighlight prop is only supported in Vue 3\");\n        }\n        const HTML_TAG_PATTERN = `(<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>)`;\n        const words: string[] = props.htmlToHighlight.split(\n          new RegExp(HTML_TAG_PATTERN, \"gs\")\n        );\n        const highlightedHtml = words\n          .map((word, i) => {\n            // Skip if the word is inside a script tag\n            if (new RegExp(HTML_TAG_PATTERN).test(word)) {\n              return word;\n            }\n            // Skip if the word is inside a script tag\n            if (i > 0 && words[i - 1].startsWith(\"<script\")) {\n              return word;\n            }\n\n            return createHighlightWordChunk(\n              word,\n              {\n                query: props.query,\n                splitBySpace: props.splitBySpace,\n                caseSensitive: props.caseSensitive,\n                diacriticsSensitive: props.diacriticsSensitive,\n                highlightTag: props.highlightTag,\n                highlightClass: props.highlightClass,\n                highlightStyle: props.highlightStyle,\n              },\n              true\n            );\n          })\n          .join(\"\");\n\n        return h(props.wrapperTag, {\n          class: props.wrapperClass,\n          innerHTML: highlightedHtml,\n        });\n      }\n\n      // --------------------------\n      // highlight props text\n      // --------------------------\n      if (props.textToHighlight) {\n        const highlightWordChunk = createHighlightWordChunk(\n          props.textToHighlight,\n          {\n            query: props.query,\n            splitBySpace: props.splitBySpace,\n            caseSensitive: props.caseSensitive,\n            diacriticsSensitive: props.diacriticsSensitive,\n            highlightTag: props.highlightTag,\n            highlightClass: props.highlightClass,\n            highlightStyle: props.highlightStyle,\n          }\n        );\n\n        ctx.emit(\"matches\", extractMatchesStrings(highlightWordChunk));\n\n        return h(\n          props.wrapperTag,\n          {\n            class: props.wrapperClass,\n          },\n          highlightWordChunk\n        );\n      }\n\n      // --------------------------\n      // highlight slots\n      // --------------------------\n      // TODO: refactor this\n      if (isVue3) {\n        // only supported nested slots in Vue 3\n        if (ctx.slots && ctx.slots.default) {\n          const createHighlightedNode = (node: VNode): VNode => {\n            // if node have a text, it's a text node\n            if (typeof node.children == \"string\") {\n              const highlightWordChunk = createHighlightWordChunk(\n                node.children,\n                {\n                  query: props.query,\n                  splitBySpace: props.splitBySpace,\n                  caseSensitive: props.caseSensitive,\n                  diacriticsSensitive: props.diacriticsSensitive,\n                  highlightTag: props.highlightTag,\n                  highlightClass: props.highlightClass,\n                  highlightStyle: props.highlightStyle,\n                }\n              );\n\n              const matchesStrings = extractMatchesStrings(highlightWordChunk);\n              ctx.emit(\"matches\", matchesStrings);\n\n              if (matchesStrings.length === 0) {\n                return node;\n              }\n              // if node is not a string, it's a html tag\n              if (typeof node.type == \"string\") {\n                return h(\n                  node.type,\n                  {\n                    ...node.props,\n                  },\n                  [\n                    h(\n                      props.wrapperTag,\n                      {\n                        class: props.wrapperClass,\n                      },\n                      highlightWordChunk\n                    ),\n                  ]\n                );\n              } else {\n                return h(\n                  props.wrapperTag,\n                  {\n                    class: props.wrapperClass,\n                  },\n                  highlightWordChunk\n                );\n              }\n            } else {\n              return h(\n                node.type as string,\n                {\n                  ...node.props,\n                },\n                Array.isArray(node.children)\n                  ? (node.children as VNode[]).map((c: VNode) =>\n                      createHighlightedNode(c)\n                    )\n                  : []\n              );\n            }\n          };\n          const nodes = ctx.slots.default();\n          return Array.isArray(nodes)\n            ? nodes.map((n: VNode) => createHighlightedNode(n))\n            : nodes;\n        }\n      } else {\n        // not support nested slots in Vue 2\n        const targetText = extractDefaultSlotsText(ctx.slots);\n\n        const highlightWordChunk = createHighlightWordChunk(targetText, {\n          query: props.query,\n          splitBySpace: props.splitBySpace,\n          caseSensitive: props.caseSensitive,\n          diacriticsSensitive: props.diacriticsSensitive,\n          highlightTag: props.highlightTag,\n          highlightClass: props.highlightClass,\n          highlightStyle: props.highlightStyle,\n        });\n\n        ctx.emit(\"matches\", extractMatchesStrings(highlightWordChunk));\n\n        return h(\n          props.wrapperTag,\n          {\n            class: props.wrapperClass,\n          },\n          highlightWordChunk\n        );\n      }\n    };\n  },\n});\n"],"names":["vueDemi","require","diacritics","escapeRegExp","text","replace","createHighlightWordChunk","targetText","options","isHtml","query","String","trim","innerTargetText","innerQuery","hasDiacritics","diacriticsSensitive","remove","RegExp","pattern","raw","source","caseSensitive","splitBySpace","normalizeQuery","split","map","join","createHighlightPattern","wordList","restoredWordList","word","splittedWordList","rowWordList","forEach","splittedWord","start","length","end","push","slice","getRowWordList","w","i","test","classLiteral","highlightClass","styleLiteral","highlightStyle","highlightTag","h","class","style","getSlotText","slot","Array","isArray","children","extractMatchesStrings","wordChunk","filter","v","isVue3","install","VueWordHighlighter","defineComponent","name","props","type","required","default","Boolean","Object","wrapperTag","wrapperClass","textToHighlight","htmlToHighlight","emits","setup","ctx","Error","HTML_TAG_PATTERN","words","highlightedHtml","startsWith","innerHTML","highlightWordChunk","emit","slots","defaultSlot","slotText","process","env","NODE_ENV","console","warn","extractDefaultSlotsText","createHighlightedNode","node","matchesStrings","c","nodes","n","module","exports"],"mappings":"AAAO,aAAA,IAAAA,EAAAC,QAAA,YAAAC,EAAAD,QAAA,cAAA,MCIDE,EAAgBC,GACbA,EAAKC,QAAQ,uBAAwB,QAiCjCC,EAA2B,CACtCC,EACAC,EASAC,GAAS,KAET,IACGD,EAAQE,OACRF,EAAQE,iBAAiBC,SAAWH,EAAQE,MAAME,OAEnD,OAAOL,EAGT,IAAIM,EAAkBN,EAClBO,EAAaN,EAAQE,MACrBK,GAAgB,EAEfP,EAAQQ,sBACXH,EAAkBX,EAAWe,OAAOJ,GACpCC,EACEN,EAAQE,iBAAiBQ,OACrBV,EAAQE,MACRR,EAAWe,OAAOT,EAAQE,OAChCK,EAAgBF,IAAoBN,GAGtC,MAAMY,EA/DuB,CAACX,IAK9B,IAAIW,EAEJ,GAAIX,EAAQE,iBAAiBQ,OAC3B,OAAO,IAAIA,OACTP,OAAOS,GAAG,IAAIZ,EAAQE,MAAMW,UAC5B,KAAIb,EAAQc,cAAgB,GAAK,MAIrC,GAAId,EAAQe,aAAc,CACxB,MAAMC,EAAiBhB,EAAQE,MAAME,OAAOP,QAAQ,OAAQ,KAC5Dc,EAAUR,OAAOS,GAAG,IAAII,EACrBC,MAAM,MACNC,IAAIvB,GACJwB,KAAK,OACT,MACCR,EAAUR,OAAOS,GAAG,IAAIjB,EAAaK,EAAQE,UAG/C,OAAO,IAAIQ,OACTP,OAAOS,GAAG,GAAGD,IACb,KAAIX,EAAQc,cAAgB,GAAK,KAClC,EAoCeM,CAAuB,CACrClB,MAAOI,EACPS,aAAcf,EAAQe,aACtBD,cAAed,EAAQc,gBAGnBO,EAAWhB,EAAgBY,MAAMN,GAGjCW,EAAmBf,EDhFG,EAC5BgB,EACAC,KAEA,MAAMC,EAAwB,GAO9B,OANAD,EAAiBE,SAASC,IACxB,MAAMC,EAAQH,EAAYN,KAAK,IAAIU,OAC7BC,EAAMF,EAAQD,EAAaE,OACjCJ,EAAYM,KAAKR,EAAKS,MAAMJ,EAAOE,GAAK,IAGnCL,CAAW,ECsEdQ,CAAelC,EAAYsB,GAC3BA,EAEJ,OAAIpB,EACKoB,EACJH,KAAI,CAACgB,EAAWC,KACf,GAAIxB,EAAQyB,KAAKF,GAAI,CAEnB,MAAMG,EAAerC,EAAQsC,eACzB,WAAWtC,EAAQsC,kBACnB,GACEC,EAAevC,EAAQwC,eACzB,WAAWxC,EAAQwC,kBACnB,GACJ,MAAO,IAAIxC,EAAQyC,eAAeJ,IAAeE,KAAgBjB,EAAiBa,OAAOnC,EAAQyC,eAClG,CACD,OAAOnB,EAAiBa,EAAE,IAE3BhB,KAAK,IAEDE,EAASH,KAAI,CAACgB,EAAWC,IAC1BxB,EAAQyB,KAAKF,GACRQ,EAACA,EACN1C,EAAQyC,aACR,CACEE,MAAO3C,EAAQsC,eACfM,MAAO5C,EAAQwC,gBAEjBlB,EAAiBa,IAGdb,EAAiBa,IAE3B,EC7GGU,EAAeC,GACdC,MAAMC,QAAQF,EAAKG,UAGjBH,EAAKG,SAAS/B,IAAI2B,GAAa1B,KAAK,IAFlC2B,EAAKG,UAAY,GCLfC,EACXC,GAEyB,iBAAdA,EACF,GAEFA,EACJC,QAAQlB,GAAmB,iBAANA,IACrBhB,KAAKmC,GACa,iBAANA,EACFA,EAELC,SACMD,EAA2BJ,SAE7BI,EAAuCJ,SAAS,GAAGrD,OCZjE2D,EAAOA,UAEP,IAAAC,EAAeC,kBAAgB,CAC7BC,KAAM,qBACNC,MAAO,CACLzD,MAAO,CACL0D,KAAM,CAACzD,OAAQO,QACfmD,UAAU,EACVC,QAAS,IAEXhD,cAAe,CACb8C,KAAMG,QACND,SAAS,GAEXtD,oBAAqB,CACnBoD,KAAMG,QACND,SAAS,GAEX/C,aAAc,CACZ6C,KAAMG,QACND,SAAS,GAEXxB,eAAgB,CACdsB,KAAM,CAACI,OAAQ7D,OAAQ4C,OAGvBe,QAAS,IAEXtB,eAAgB,CACdoB,KAAM,CAACI,OAAQ7D,OAAQ4C,OAGvBe,QAAS,IAEXrB,aAAc,CACZmB,KAAMzD,OACN2D,QAAS,QAEXG,WAAY,CACVL,KAAMzD,OACN2D,QAAS,QAEXI,aAAc,CACZN,KAAM,CAACI,OAAQ7D,OAAQ4C,OACvBe,QAAS,IAEXK,gBAAiB,CACfP,KAAMzD,OACN2D,QAAS,IAEXM,gBAAiB,CACfR,KAAMzD,OACN2D,QAAS,KAGbO,MAAO,CAAC,WACRC,MAAK,CAACX,EAAOY,IACJ,KAKL,GAAIZ,EAAMS,gBAAiB,CACzB,IAAKd,EAAAA,OACH,MAAM,IAAIkB,MAAM,mDAElB,MAAMC,EAAmB,kDACnBC,EAAkBf,EAAMS,gBAAgBnD,MAC5C,IAAIP,OAAO+D,EAAkB,OAEzBE,EAAkBD,EACrBxD,KAAI,CAACK,EAAMY,IAEN,IAAIzB,OAAO+D,GAAkBrC,KAAKb,IAIlCY,EAAI,GAAKuC,EAAMvC,EAAI,GAAGyC,WAAW,WAH5BrD,EAOFzB,EACLyB,EACA,CACErB,MAAOyD,EAAMzD,MACba,aAAc4C,EAAM5C,aACpBD,cAAe6C,EAAM7C,cACrBN,oBAAqBmD,EAAMnD,oBAC3BiC,aAAckB,EAAMlB,aACpBH,eAAgBqB,EAAMrB,eACtBE,eAAgBmB,EAAMnB,iBAExB,KAGHrB,KAAK,IAER,OAAOuB,EAACA,EAACiB,EAAMM,WAAY,CACzBtB,MAAOgB,EAAMO,aACbW,UAAWF,GAEd,CAKD,GAAIhB,EAAMQ,gBAAiB,CACzB,MAAMW,EAAqBhF,EACzB6D,EAAMQ,gBACN,CACEjE,MAAOyD,EAAMzD,MACba,aAAc4C,EAAM5C,aACpBD,cAAe6C,EAAM7C,cACrBN,oBAAqBmD,EAAMnD,oBAC3BiC,aAAckB,EAAMlB,aACpBH,eAAgBqB,EAAMrB,eACtBE,eAAgBmB,EAAMnB,iBAM1B,OAFA+B,EAAIQ,KAAK,UAAW7B,EAAsB4B,IAEnCpC,EAACA,EACNiB,EAAMM,WACN,CACEtB,MAAOgB,EAAMO,cAEfY,EAEH,CAMD,IAAIxB,SAsEG,CAEL,MAAMvD,EFxMyB,CAACiF,IACtC,GAAIA,GAASA,EAAMlB,QAAS,CAC1B,MAAMmB,EAAcD,EAAMlB,UAC1B,IAAIoB,EAOJ,OALEA,EADE5B,SACST,EAAYoC,EAAY,IAGxBA,EAAY,GAAGrF,KAEJ,iBAAbsF,EACFA,GAEsB,eAAzBC,QAAQC,IAAIC,UACdC,QAAQC,KAAK,6BAER,GAEV,CACD,MAAO,EAAE,EEqLgBC,CAAwBjB,EAAIS,OAEzCF,EAAqBhF,EAAyBC,EAAY,CAC9DG,MAAOyD,EAAMzD,MACba,aAAc4C,EAAM5C,aACpBD,cAAe6C,EAAM7C,cACrBN,oBAAqBmD,EAAMnD,oBAC3BiC,aAAckB,EAAMlB,aACpBH,eAAgBqB,EAAMrB,eACtBE,eAAgBmB,EAAMnB,iBAKxB,OAFA+B,EAAIQ,KAAK,UAAW7B,EAAsB4B,IAEnCpC,EAACA,EACNiB,EAAMM,WACN,CACEtB,MAAOgB,EAAMO,cAEfY,EAEH,CA3FC,GAAIP,EAAIS,OAAST,EAAIS,MAAMlB,QAAS,CAClC,MAAM2B,EAAyBC,IAE7B,GAA4B,iBAAjBA,EAAKzC,SAAsB,CACpC,MAAM6B,EAAqBhF,EACzB4F,EAAKzC,SACL,CACE/C,MAAOyD,EAAMzD,MACba,aAAc4C,EAAM5C,aACpBD,cAAe6C,EAAM7C,cACrBN,oBAAqBmD,EAAMnD,oBAC3BiC,aAAckB,EAAMlB,aACpBH,eAAgBqB,EAAMrB,eACtBE,eAAgBmB,EAAMnB,iBAIpBmD,EAAiBzC,EAAsB4B,GAG7C,OAFAP,EAAIQ,KAAK,UAAWY,GAEU,IAA1BA,EAAe9D,OACV6D,EAGe,iBAAbA,EAAK9B,KACPlB,EAACA,EACNgD,EAAK9B,KACL,IACK8B,EAAK/B,OAEV,CACEjB,EAACA,EACCiB,EAAMM,WACN,CACEtB,MAAOgB,EAAMO,cAEfY,KAKCpC,EAACA,EACNiB,EAAMM,WACN,CACEtB,MAAOgB,EAAMO,cAEfY,EAGL,CACC,OAAOpC,EAACA,EACNgD,EAAK9B,KACL,IACK8B,EAAK/B,OAEVZ,MAAMC,QAAQ0C,EAAKzC,UACdyC,EAAKzC,SAAqB/B,KAAK0E,GAC9BH,EAAsBG,KAExB,GAEP,EAEGC,EAAQtB,EAAIS,MAAMlB,UACxB,OAAOf,MAAMC,QAAQ6C,GACjBA,EAAM3E,KAAK4E,GAAaL,EAAsBK,KAC9CD,CACL,CAwBF,IAGLE,OAAAC,QAAAxC"}